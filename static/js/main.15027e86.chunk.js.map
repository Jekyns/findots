{"version":3,"sources":["logo.svg","utils/NOD.js","utils/MatrixOperations.js","components/ShowMatrix.jsx","components/caculateMatrix.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NOD","x","arguments","i","length","y","myMul","A","B","Dside","matrix","rang","size","console","log","row","rowI","colI","j","a","b","push","calculateDiff","Dtrans","D","iteration","leftSide","rightSide","res","newMatrix","newElem","mySum","compareElem","elem","Eq","countEquivalent","elems","equivalent","equivalentI","checkRepeat","splice","converToString","obj","newStr","key","Object","keys","values","sumEquation","sum","countElem","elemForCompare","NODObject","objNOD","newSum","map","value","findNOD","undefined","ShowMatrix","props","onChangeInput","e","setState","order","currentTarget","showEquationElem","dangerouslySetInnerHTML","__html","replace","arg","slice","converToEquation","equation","showNameMatrixEquation","diffs","state","allMatrixs","this","StyledMatrix","TableWrapper","TableName","StyledTableContainer","Table","className","aria-label","TableBody","TableRow","name","TableCell","EquationWrapper","Component","styled","div","TableContainer","ContentOts","onChangeIterations","iterations","calculateOTS","fillD","filledMatrix","fillMatrix2","trans","prevRes","newRow","split","join","TextField","required","margin","label","onChange","Button","onClick","color","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15027e86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function NOD () {\r\n  for (var x = +arguments[0], i = 1; i < arguments.length; i++) {\r\n    var y = +arguments[i];\r\n    while (x && y) {\r\n      x > y ? x %= y : y %= x;\r\n    }\r\n    x += y;\r\n  }\r\n  return x;\r\n};\r\nexport function findNOD (obj) {\r\n  const objNOD = NOD(...Object.keys(obj));// return NOD\r\n  if(objNOD<=1){\r\n    return {NOD: objNOD, newSum:obj};\r\n  }\r\n  const newSum = {};\r\n  Object.keys(obj).map((value,i)=>{\r\n    newSum[value/objNOD] = Object.values(obj)[i];\r\n  })\r\n  // const newObj = {[objNOD]:Object.values(obj)};\r\n  return {NOD: objNOD, newSum};\r\n}","import matrix from 'matrix-js';\r\nimport { findNOD } from './NOD';\r\n\r\nexport function fillMatrix2(rang) {\r\n    let filledMatrix = [];\r\n    for (let i = 0; i < rang; i++) {\r\n        let row = [];\r\n        for (let j = 0; j < rang; j++) {\r\n            row.push(`a${i + 1}${j + 1}`);\r\n            // row.push(2);\r\n        }\r\n        filledMatrix.push(row);\r\n    }\r\n    return matrix(filledMatrix);\r\n};\r\n\r\nexport function compareElems(a, b) {\r\n    if (b === 0) {\r\n        return null\r\n    }\r\n};\r\nexport function myMul(A, B, Dside) {\r\n    const matrix = [];\r\n    const rang = A.size()[0];\r\n    console.log('rang is', rang);\r\n    let row = [];\r\n    for (let rowI = 0; rowI < rang; rowI++) {\r\n        for (let colI = 0; colI < rang; colI++) {\r\n            for (let j = 0; j < rang; j++) {\r\n                const a = A(rowI)[j];\r\n                const b = Dside !== 'left' ? B([], colI)[j] : B([], colI)[j][0];\r\n                if (Dside === 'left') {\r\n                    if (a !== 0) {\r\n                        row.push(b);\r\n                    }\r\n                }\r\n                else {\r\n                    if (b[0] !== 0) {\r\n                        row.push(a);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        matrix.push(row);\r\n        row = [];\r\n    }\r\n    return matrix;\r\n};\r\n\r\nexport function mySum(A, B) {\r\n    const rang = A.size()[0];\r\n    const newMatrix = [];\r\n    for (let i = 0; i < rang; i++) {\r\n        let row = [];\r\n        for (let j = 0; j < rang; j++) {\r\n            const newElem = A(i, j) + B(i, j);\r\n            row.push(newElem);\r\n        }\r\n        newMatrix.push(row);\r\n    }\r\n    return newMatrix\r\n};\r\n\r\nexport function fillD(rang) {\r\n    const matrix = [];\r\n    for (let i = 0; i < rang; i++) {\r\n        let row = [];\r\n        let j = 0;\r\n        if ((i + 1) == rang) {\r\n            row.push(1)\r\n            j++\r\n        }\r\n        for (j; j < rang; j++) {\r\n            if (j === (i + 1)) {\r\n                row.push(1);\r\n            }\r\n            else {\r\n                row.push(0);\r\n            }\r\n        }\r\n        j = 0;\r\n        matrix.push(row);\r\n        row = [];\r\n    }\r\n    console.log('D is', matrix);\r\n    return matrix;\r\n};\r\nexport function calculateDiff(A, Dtrans, D, iteration) {\r\n    // console.log('A is ', A());\r\n    // console.log('D is ', D());\r\n    // console.log('Dtrams is ', Dtrans());\r\n    const leftSide = matrix(myMul(Dtrans, A, 'left'));\r\n    const rightSide = matrix(myMul(A, D, 'right'));\r\n    const res = matrix(mySum(leftSide, rightSide));\r\n    // console.log(`on ${iteration} rightSide is`, rightSide());\r\n    // console.log(`on ${iteration} leftSide is`, leftSide());\r\n    console.log(`on ${iteration} res is`, res());\r\n    return res;\r\n};\r\nexport function compareElem(elem, Eq) {\r\n    let countEquivalent = 0;\r\n    if (Eq.length < 1) {\r\n        return 0;\r\n    }\r\n\r\n    for (let elems = 0; elems < Eq.length; elems++) {// перебираем все элементры массива\r\n        let equivalent = false;\r\n        let equivalentI = [];\r\n        for (let i = 0; i < elem.length; i++) {//перебираем всю строку одного из элементов\r\n            for (let j = 0; j < Eq[elems].length; j++) { // перебираем всю строку элемента из массива\r\n                if (elem[i] === Eq[elems][j]) {\r\n                    let checkRepeat = false;//переменная отвечающая за повторный символ\r\n                    for (let g of equivalentI) {//если мы уже брали этот символ\r\n                        if (g === j) {\r\n                            checkRepeat = true;\r\n                            break\r\n                        }\r\n                    }\r\n                    if (!checkRepeat) {\r\n                        equivalent = true;\r\n                        equivalentI.push(j);\r\n                        break\r\n                    }\r\n                }\r\n                else {\r\n                    equivalent = false;\r\n                }\r\n            }\r\n            if (equivalent === false) {\r\n                break;\r\n            }\r\n        }\r\n        equivalentI = [];\r\n        if (equivalent === true) {\r\n            countEquivalent++\r\n            Eq.splice(elems, 1);\r\n            elems--\r\n        }\r\n    }\r\n\r\n    return countEquivalent;\r\n};\r\nexport function converToString(obj) {\r\n    let newStr = '';\r\n    for (let key = 0; key < Object.keys(obj).length; key++) {\r\n        if (key > 0) {\r\n            if (Object.keys(obj)[key] > 1) {\r\n                if (Object.values(obj)[key].length >= 2) {\r\n                    newStr += `+${Object.keys(obj)[key]}(`\r\n                }\r\n                else {\r\n                    newStr += `+${Object.keys(obj)[key]}`\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (Object.keys(obj)[key] > 1) {\r\n                if (Object.values(obj)[key].length >= 2) {\r\n                    newStr += `${Object.keys(obj)[key]}(`\r\n                }\r\n                else {\r\n                    newStr += `${Object.keys(obj)[key]}`\r\n                }\r\n\r\n            }\r\n        }\r\n        for (let elem = 0; elem < Object.values(obj)[key].length; elem++) {\r\n            if (elem > 0) {\r\n                newStr += `+${Object.values(obj)[key][elem]}`\r\n            }\r\n            else {\r\n                newStr += `${Object.values(obj)[key][elem]}`\r\n            }\r\n        }\r\n        if (Object.keys(obj)[key] > 1) {\r\n            if (Object.values(obj)[key].length >= 2) {\r\n                newStr += `)`\r\n            }\r\n        }\r\n    }\r\n    return newStr;\r\n};\r\n// export function sumEquation(Eq) {\r\n//     const sum = {};\r\n//     let countElem = 0;\r\n//     for (let elem = 0; elem < Eq.length;) {\r\n//         const elemForCompare = Eq[elem];\r\n//         Eq.splice(elem, 1);\r\n//         countElem = compareElem(elemForCompare, Eq) + 1;\r\n//         if (sum[countElem]) {\r\n//             sum[countElem] = [...sum[countElem], elemForCompare]\r\n//         }\r\n//         else {\r\n//             sum[countElem] = [elemForCompare]\r\n//         }\r\n//     }\r\n//     if(sum[2] && sum[2].length>1){\r\n\r\n//         debugger\r\n//     }\r\n//     const newStr = converToString(sum);\r\n//     return newStr;\r\n// }\r\n\r\nexport function sumEquation(Eq) {\r\n    const sum = {};\r\n    let countElem = 0;\r\n    for (let elem = 0; elem < Eq.length;) {\r\n        const elemForCompare = Eq[elem];\r\n        Eq.splice(elem, 1);\r\n        countElem = compareElem(elemForCompare, Eq) + 1;\r\n        if (sum[countElem]) {\r\n            sum[countElem] = [...sum[countElem], elemForCompare]\r\n        }\r\n        else {\r\n            sum[countElem] = [elemForCompare]\r\n        }\r\n    }\r\n    if (sum[2] && sum[2].length > 1) {\r\n        debugger\r\n    }\r\n    let newStr = '';\r\n    if (Object.keys(sum).length > 1) {\r\n        const NODObject = findNOD(sum);\r\n        if (NODObject.NOD > 1) {\r\n            newStr += `${NODObject.NOD}(`\r\n        }\r\n        if(NODObject.newSum == undefined || NODObject.newSum == null){\r\n            debugger\r\n        }\r\n        newStr += converToString(NODObject.newSum);\r\n        if (NODObject.NOD > 1) {\r\n            newStr += `)`\r\n        }\r\n    }else{\r\n        newStr = converToString(sum);\r\n    }\r\n    return newStr;\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport matrix from 'matrix-js';\r\nimport { fillD, fillMatrix2, calculateDiff, sumEquation } from '../utils/MatrixOperations';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport default class ShowMatrix extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // const D = matrix(fillD(rang));\r\n    // const A = fillMatrix2(rang);\r\n    this.state = {\r\n      order: 6,\r\n      allMatrixs: [],\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({ order: e.currentTarget.value });\r\n  }\r\n\r\n  showEquationElem = (elem, i, j) => {\r\n    let newElem = [];\r\n    if(i!=5 && j!=5){\r\n      newElem.push(<>\r\n        <span\r\n         dangerouslySetInnerHTML={{__html: elem.replace(/a[0-9]+/gm, (...arg)=>{return `${arg[0][0]}<sub>${arg[0].slice(1,arg[0].length)}</sub>`})}}\r\n        />\r\n        K<sub>{i + 1}</sub>(x)K<sub>{j + 1}</sub>(x)+\r\n        </>)\r\n    }\r\n    else{\r\n      newElem.push(<>\r\n      <span\r\n       dangerouslySetInnerHTML={{__html: elem.replace(/a[0-9]+/gm, (...arg)=>{return `${arg[0][0]}<sub>${arg[0].slice(1,arg[0].length)}</sub>`})}}\r\n      />\r\n      K<sub>{i + 1}</sub>(x)K<sub>{j + 1}</sub>(x)\r\n      </>)\r\n    }\r\n    return (newElem)\r\n  }\r\n\r\n  converToEquation = (matrix) => {\r\n    const equation = [];\r\n    matrix.map((row, i) => {\r\n      row.map((elem, j) => {\r\n        equation.push(this.showEquationElem(elem, i, j))\r\n      })\r\n    })\r\n    return equation;\r\n  }\r\n\r\nshowNameMatrixEquation = (order) => {\r\n  let diffs = '';\r\n  for(let i = 0;i<order;i++){\r\n    diffs+='`';\r\n  }\r\n  return(<>A{diffs}</>)\r\n}\r\n\r\n  render() {\r\n    const { matrix, i } = this.props;\r\n    return (\r\n      <div>\r\n        <StyledMatrix>\r\n          <TableWrapper>\r\n            <TableName>\r\n              A <sub>{i}</sub> =\r\n            </TableName>\r\n            <StyledTableContainer>\r\n              <Table className={'matrix'} aria-label=\"simple table\">\r\n                <TableBody>\r\n                  {matrix.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      {row.map(elem => (\r\n                        <TableCell dangerouslySetInnerHTML={{__html: elem.replace(/a[0-9]+/gm, (...arg)=>{return `${arg[0][0]}<sub>${arg[0].slice(1,arg[0].length)}</sub>`})}}>\r\n                          {/* {elem.replace(/a[0-9]+/gm, (...arg)=>{return `${arg[0][0]}<sub>${arg[0].slice(1,arg[0].length)}</sub>`})} */}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </StyledTableContainer>\r\n          </TableWrapper>\r\n        </StyledMatrix>\r\n        <EquationWrapper>\r\n        <span className=\"equation__name-span\">{this.showNameMatrixEquation(i)} = </span>\r\n        <span className=\"equation__element-span\">{this.converToEquation(matrix)}</span>\r\n        </EquationWrapper>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst StyledMatrix = styled.div`\r\n  margin: 45px;\r\n  padding:20px;\r\n  padding-left:100px;\r\n`\r\nconst TableWrapper = styled.div`\r\n  display:flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`\r\nconst TableName = styled.div`\r\ncolor:#000;\r\nmargin-right:20px;\r\n`\r\nconst StyledTableContainer = styled(TableContainer)`\r\n  width:75%;\r\n  border-left: 2px solid #000;\r\n  border-radius: 24px;\r\n  border-right: 2px solid #000;\r\n`\r\nconst EquationWrapper = styled.div`\r\n  color:#000;\r\n  width: 80%;\r\n  word-break: break-word;\r\n  font-size: 12px;\r\n  display: flex;\r\n  .equation__name-span{\r\n    word-break: normal;\r\n    width: 150px;\r\n  }\r\n`","import React, { Component } from 'react';\r\nimport matrix from 'matrix-js';\r\nimport { fillD, fillMatrix2, calculateDiff, sumEquation } from '../utils/MatrixOperations';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShowMatrix from './ShowMatrix';\r\n\r\nexport default class ContentOts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // const D = matrix(fillD(rang));\r\n        // const A = fillMatrix2(rang);\r\n        this.state = {\r\n            order: 6,\r\n            iterations: 6,\r\n            allMatrixs: [],\r\n        };\r\n    }\r\n    componentDidMount() {}\r\n    onChangeInput = (e) => {\r\n        this.setState({ order: e.currentTarget.value });\r\n    }\r\n    onChangeIterations = (e) => {\r\n        this.setState({ iterations: e.currentTarget.value });\r\n    }\r\n\r\n    calculateOTS = () => {\r\n        const {order,iterations} = this.state\r\n        const D = matrix(fillD(order));\r\n        console.log('D is', D());\r\n        const A = fillMatrix2(order);\r\n        const Dtrans = matrix(D.trans());\r\n        const allMatrixs = [];\r\n        allMatrixs.push(A());\r\n        // this.setState({ order: e.currentTarget.value });\r\n        let prevRes = A;\r\n        for (let i = 0; i < iterations; i++) {\r\n            prevRes = calculateDiff(prevRes, Dtrans, D, i + 1);\r\n            let matrix = prevRes();\r\n            let newMatrix = [];\r\n            for (let row of matrix) {\r\n                let newRow = [];\r\n                for (let elem of row) {\r\n                    let newElem = elem.split('a').join('|a').split('|');\r\n                    newElem.splice(0, 1);\r\n                    newElem = sumEquation(newElem);\r\n                    newRow.push(newElem);\r\n                }\r\n                newMatrix.push(newRow);\r\n            }\r\n            console.log(`Matrix OTS ${i + 1} String is`, newMatrix)\r\n            allMatrixs.push(newMatrix);\r\n        }\r\n\r\n        this.setState({allMatrixs: allMatrixs});\r\n    }\r\n\r\n    render() {\r\n        const {order,iterations, allMatrixs} = this.state;\r\n        return (\r\n            <div>Enter order:\r\n            <TextField\r\n                    required={true}\r\n                    className=\"order\"\r\n                    value={order}\r\n                    margin=\"dense\"\r\n                    label={`Enter order OTS`}\r\n                    onChange={(e) => { this.onChangeInput(e); }}\r\n                />\r\n                Enter iteration count:\r\n            <TextField\r\n                    required={true}\r\n                    className=\"iterations\"\r\n                    value={iterations}\r\n                    margin=\"dense\"\r\n                    label={`Enter iteration count`}\r\n                    onChange={(e) => { this.onChangeIterations(e); }}\r\n                />\r\n                \r\n                <Button onClick={this.calculateOTS} color=\"primary\">\r\n                    Calculate\r\n            </Button>\r\n            {allMatrixs.map((matrix, i)=>(\r\n                <ShowMatrix matrix={matrix} i={i}/>\r\n            ))}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport ContentOts from './components/caculateMatrix';\nimport './App.css';\nimport { Matrix } from 'javascript-algebra';\nimport matrix from 'matrix-js';\n\n\n\n\n\n\nfunction App() {\n  //перевод массив элементов в строку сложения\n\n  // const test = ['a15', 'a51', 'a14', 'a11', 'a12', 'a11', 'a11', 'a14'];\n  // sumEquation(test);\n\n  //расчет ОТС любого порядка\n\n  // const a = fillMatrix2(rang);\n  // const A = matrix(a);\n  // console.log('A is', A());\n\n  // let prevRes = A;\n  // for (let i = 0; i < rang; i++) {\n  //   prevRes = calculateDiff(prevRes, i + 1);\n  //   let matrix = prevRes();\n  //   let newMatrix = [];\n  //   for(let row of matrix){\n  //     let newRow = [];\n  //     for(let elem of row){\n  //       let newElem = elem.split('a').join('|a').split('|');\n  //       newElem.splice(0,1);\n  //       newElem = sumEquation(newElem);\n  //       debugger\n  //       newRow.push(newElem);\n  //     }\n  //     newMatrix.push(newRow);\n  //   }\n  //   console.log(`Matrix OTS ${i+1} String is`, newMatrix)\n  // }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ContentOts></ContentOts>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}